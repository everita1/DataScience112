---
title: "Wrangling + Dates"
number-sections: true
execute: 
  warning: false
fig-env: 'figure'
fig-pos: 'h'
fig-align: center
code-fold: false
---

::: {.callout-caution title="Learning Goals"}
-   Review wrangling verbs `select`, `mutate`, `filter`, `arrange`, `summarize`, `group_by`
-   Form conceptual understanding of code without running it
-   Practice using wrangling verbs in different way
-   Practice dealing with dates using `lubridate` functions
:::

::: {.callout-note title="Additional Resources"}
For more information about the topics covered in this chapter, refer to the resources below:

-   [Date and Times (html)](https://r4ds.hadley.nz/datetimes) by Wickham, Ã‡etinkaya-Rundel, & Grolemund
:::

{{< include activity-instructions.qmd >}}

## Warm-up

### Data Science Process {.unnumbered}

Below is the visual representation of the data science process we saw earlier. Which stage are we in currently?

![](https://mac-stat.github.io/images/112/legos.png)

Recall that wrangling is important. It is much of what we spend our efforts on in Data Science. There are lots of steps, hence R functions, that can go into data wrangling. But we can get far with the following 6 *wrangling verbs*:

| verb        | action                                            |
|:------------|:--------------------------------------------------|
| `arrange`   | **arrange** the *rows* according to some *column* |
| `filter`    | **filter** out or obtain a subset of the *rows*   |
| `select`    | **select** a subset of *columns*                  |
| `mutate`    | **mutate** or create a *column*                   |
| `summarize` | calculate a numerical **summary** of a *column*   |
| `group_by`  | **group** the *rows* by a specified *column*      |

### Example 1: Single Verb {.unnumbered}

Let's start by working with some TidyTuesday data on penguins. This data includes information about penguins' flippers ("arms") and bills ("mouths" or "beaks"). Let's import this using `read_csv()`, a function in the `tidyverse` package. For the most part, this is similar to `read.csv()`, though `read_csv()` can be more efficient at importing large datasets.

```{r}
library(tidyverse)
penguins <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-07-28/penguins.csv')

# Check it out
head(penguins)
```

::: {.callout-warning title="Check Understanding"}
Construct a plot that allows us to examine how the relationship between body mass and bill length varies by species and sex.
:::

```{r}
ggplot(penguins, aes(x = body_mass_g, y = bill_length_mm, color = species)) +
  geom_point() +
  facet_wrap(~sex)
```

::: {.callout-warning title="Check Understanding"}
Use the 6 wrangling verbs to address each task in the code chunk below. You can tack on `|> head()` to print out just 6 rows to keep your rendered document manageable. Most of these require just 1 verb.
:::

```{r}
# Get data on only Adelie penguins that weigh more than 4700g

penguins |> 
  filter(species == "Adelie", body_mass_g > 4700)

# Get data on penguin body mass only
# Show just the first 6 rows

penguins |> 
  select(body_mass_g) |> 
  head()


# Sort the penguins from smallest to largest body mass
# Show just the first 6 rows

penguins |> 
  arrange(body_mass_g) |> 
  head()



# Calculate the average body mass across all penguins
# Note: na.rm = TRUE removes the NAs from the calculation

penguins |> 
  summarize(mean = mean(body_mass_g, na.rm = TRUE))



# Calculate the average body mass by species

penguins |> 
  group_by(species) |> 
  summarize(mean = mean(body_mass_g, na.rm = TRUE))


# Create a new column that records body mass in kilograms, not grams
# NOTE: there are 1000 g in 1 kg
# Show just the first 6 rows

penguins |> 
  mutate(body_mass_k = body_mass_g/1000) |> 
  head()


```

::: {.callout-warning title="Check Understanding"}
How many penguins of each species do we have? Create a viz that addresses this question.
:::

```{r}
ggplot(penguins, aes(x = species)) +
  geom_bar()
```

::: {.callout-warning title="Check Understanding"}
Can we use the 6 verbs to calculate exactly how many penguins in each species?

HINT: `n()` calculates group size.
:::

```{r}
penguins |> 
  group_by(species) |> 
  summarize(n())
```

::: {.callout-tip title="`count` verb"}
The `count()` verb provides a handy shortcut!

```{r}
penguins |> 
  count(species)
```
:::

### Example 2: Multiple Verbs {.unnumbered}

::: {.callout-warning title="Check Understanding"}
Let's practice *combining* some verbs. For each task:

-   Translate the prompt into our 6 verbs. That is, think before you type.
-   Build your code line by line. It's important to understand what's being piped into each function!
-   Ask what you can rearrange and still get the same result.
-   Read your final code like a paragraph / a conversation. Would another person be able to follow your logic?

*group_by species == Gento, then mutata mm to cm, then arrange, descending bill length.*
:::

```{r}
# Sort Gentoo penguins from biggest to smallest with respect to their 
# bill length in cm (there are 10 mm in a cm)

penguins |> 
  group_by(species == "Gento") |>
  mutate(bill_length_cm = bill_length_mm/10) |> 
  arrange(desc(bill_length_cm))

```

Adding onto the previous code, the new verb we will use is summarize, mean

```{r}
# Sort the species from smallest to biggest with respect to their 
# average bill length in cm

penguins |> 
  mutate(bill_length_cm = bill_length_mm/10) |> 
  group_by(species) |>
  summarize(mean_bill_length= mean(bill_length_cm, na.rm = TRUE)) |> 
  arrange(desc(mean_bill_length))


```

### Example 3: Interpret Code {.unnumbered}

Let's practice reading and making sense of somebody *else*'s code. What do you think this produces?

-   How many columns? Rows?
-   What are the column names?
-   What's represented in each row?

Once you've thought about it, put the code inside a chunk and run it!

penguins \|\> filter(species == "Chinstrap") \|\> group_by(sex) \|\> summarize(min = min(body_mass_g), max = max(body_mass_g)) \|\> mutate(range = max - min)

This code will produce the min and maximum body mass of the Chinstrap species of penguins, comparing them by sex.

\
\
\
\

